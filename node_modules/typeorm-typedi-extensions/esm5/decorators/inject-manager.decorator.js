import { ConnectionManager } from 'typeorm';
import { Container } from 'typedi';
import { ConnectionNotFoundError } from '../errors/manager-not-found.error';
/**
 * Injects the `EntityManager` object using TypeDI's container.
 * This decorator can be used both as class property decorator or constructor parameter decorator.
 */
export function InjectManager(connectionName) {
    if (connectionName === void 0) { connectionName = 'default'; }
    return function (object, propertyName, index) {
        Container.registerHandler({
            object: object,
            index: index,
            propertyName: propertyName,
            value: function (containerInstance) {
                var connectionManager = containerInstance.get(ConnectionManager);
                if (!connectionManager.has(connectionName)) {
                    throw new ConnectionNotFoundError(connectionName);
                }
                return connectionManager.get(connectionName).manager;
            },
        });
    };
}
//# sourceMappingURL=inject-manager.decorator.js.map