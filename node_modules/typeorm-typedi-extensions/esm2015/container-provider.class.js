import { Container } from 'typedi';
/**
 * Class transforming between TypeDI API and the expected API by TypeORM.
 */
export class TypeDIContainerProvider {
    get(constructable) {
        /**
         * TypeDI only resolves values for registered types, so we need to register
         * them before to requesting them from the default container.
         */
        if (!Container.has(constructable)) {
            Container.set({ id: constructable, type: constructable });
        }
        return Container.get(constructable);
    }
}
//# sourceMappingURL=container-provider.class.js.map